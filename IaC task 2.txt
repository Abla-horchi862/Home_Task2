# Define the AWS provider and region
provider "aws" {
  region = "us-east-1" 
}

# Create an S3 bucket for data storage
resource "aws_s3_bucket" "data_bucket" {
  bucket = "data-bucket-name"
  acl    = "private"
}

# Create a Kinesis Data Stream for data ingestion
resource "aws_kinesis_stream" "data_stream" {
  name             = "data-stream-name"
  shard_count      = 2  
  retention_period = 24 
  shard_level_metrics = ["IncomingBytes", "OutgoingBytes"]
}

# Create a Kinesis Analytics Application
resource "aws_kinesis_analytics_application" "data_analytics" {
  name        = "data-analytics-app-name"
  input {
    name_prefix = "SOURCE_SQL_STREAM"
    kinesis_stream {
      kinesis_stream_arn = aws_kinesis_stream.data_stream.arn
      role_arn           = aws_iam_role.kinesis_role.arn
    }
    parallelism = 1 
  }

  output {
    name = "DESTINATION_SQL_STREAM"
    kinesis_stream {
      kinesis_stream_arn = aws_kinesis_stream.data_stream.arn
      role_arn           = aws_iam_role.kinesis_role.arn
    }
  }
}

# Create an IAM Role for Kinesis Analytics
resource "aws_iam_role" "kinesis_role" {
  name = "kinesis-role-name"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": "kinesisanalytics.amazonaws.com"
      },
      "Effect": "Allow"
    }
  ]
}
EOF
}

# Attach policies to the IAM Role 
resource "aws_iam_policy_attachment" "kinesis_role_attachment" {
  policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonKinesisAnalyticsFullAccess"
  roles      = [aws_iam_role.kinesis_role.name]
}

# Output the S3 bucket name for reference
output "s3_bucket_name" {
  value = aws_s3_bucket.data_bucket.id
}

# Output the Kinesis Data Stream name for reference
output "kinesis_stream_name" {
  value = aws_kinesis_stream.data_stream.name
}

# Output the Kinesis Analytics Application name for reference
output "kinesis_analytics_app_name" {
  value = aws_kinesis_analytics_application.data_analytics.name
}
